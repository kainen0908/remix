{
	"id": "58b50ea02d0ebe55823e9916ac6c82e3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"chapter8/Ex8_7.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\";\r\n\r\ncontract Ex8_7 {\r\n    using SafeMath for uint; // uint == uint256\r\n    uint constant public MAX_UINT = ~uint(0); // (~ 01001001) == 10110110 (~ 0000) == (1111) ~는 비트반전\r\n\r\n    function addition(uint _num) public pure returns(uint) {\r\n        return MAX_UINT.add(_num);\r\n    }\r\n    function multiplication(uint _num) public pure returns(uint) {\r\n        return MAX_UINT.mul(_num);\r\n    }\r\n    function division(uint _num) public pure returns(uint) {\r\n        return MAX_UINT.div(_num);\r\n    }\r\n    function modulo(uint _num) public pure returns(uint) {\r\n        return MAX_UINT.mod(_num);\r\n    }\r\n    function subtraction(uint _num1, uint _num2) public pure returns(uint) {\r\n        return _num1.add(_num2);\r\n    }\r\n}\r\n\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"chapter8/Ex8_7.sol": {
				"Ex8_7": {
					"abi": [
						{
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "addition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "division",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "modulo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "multiplication",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_num2",
									"type": "uint256"
								}
							],
							"name": "subtraction",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"chapter8/Ex8_7.sol\":197:922  contract Ex8_7 {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"chapter8/Ex8_7.sol\":197:922  contract Ex8_7 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x45bd069b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x543209b7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x886c6f51\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x900683d0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc6162c61\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"chapter8/Ex8_7.sol\":598:697  function division(uint _num) public pure returns(uint) {\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chapter8/Ex8_7.sol\":382:481  function addition(uint _num) public pure returns(uint) {\r... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chapter8/Ex8_7.sol\":703:800  function modulo(uint _num) public pure returns(uint) {\r... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chapter8/Ex8_7.sol\":806:919  function subtraction(uint _num1, uint _num2) public pure returns(uint) {\r... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chapter8/Ex8_7.sol\":487:592  function multiplication(uint _num) public pure returns(uint) {\r... */\n    tag_7:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chapter8/Ex8_7.sol\":268:308  uint constant public MAX_UINT = ~uint(0) */\n    tag_8:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chapter8/Ex8_7.sol\":598:697  function division(uint _num) public pure returns(uint) {\r... */\n    tag_11:\n        /* \"chapter8/Ex8_7.sol\":647:651  uint */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":671:689  MAX_UINT.div(_num) */\n      tag_27\n        /* \"chapter8/Ex8_7.sol\":684:688  _num */\n      dup3\n        /* \"chapter8/Ex8_7.sol\":306:307  0 */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":300:308  ~uint(0) */\n      not\n        /* \"chapter8/Ex8_7.sol\":671:683  MAX_UINT.div */\n      tag_28\n      swap1\n        /* \"chapter8/Ex8_7.sol\":671:689  MAX_UINT.div(_num) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_27:\n        /* \"chapter8/Ex8_7.sol\":664:689  return MAX_UINT.div(_num) */\n      swap1\n      pop\n        /* \"chapter8/Ex8_7.sol\":598:697  function division(uint _num) public pure returns(uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chapter8/Ex8_7.sol\":382:481  function addition(uint _num) public pure returns(uint) {\r... */\n    tag_14:\n        /* \"chapter8/Ex8_7.sol\":431:435  uint */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":455:473  MAX_UINT.add(_num) */\n      tag_30\n        /* \"chapter8/Ex8_7.sol\":468:472  _num */\n      dup3\n        /* \"chapter8/Ex8_7.sol\":306:307  0 */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":300:308  ~uint(0) */\n      not\n        /* \"chapter8/Ex8_7.sol\":455:467  MAX_UINT.add */\n      tag_31\n      swap1\n        /* \"chapter8/Ex8_7.sol\":455:473  MAX_UINT.add(_num) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_30:\n        /* \"chapter8/Ex8_7.sol\":448:473  return MAX_UINT.add(_num) */\n      swap1\n      pop\n        /* \"chapter8/Ex8_7.sol\":382:481  function addition(uint _num) public pure returns(uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chapter8/Ex8_7.sol\":703:800  function modulo(uint _num) public pure returns(uint) {\r... */\n    tag_17:\n        /* \"chapter8/Ex8_7.sol\":750:754  uint */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":774:792  MAX_UINT.mod(_num) */\n      tag_33\n        /* \"chapter8/Ex8_7.sol\":787:791  _num */\n      dup3\n        /* \"chapter8/Ex8_7.sol\":306:307  0 */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":300:308  ~uint(0) */\n      not\n        /* \"chapter8/Ex8_7.sol\":774:786  MAX_UINT.mod */\n      tag_34\n      swap1\n        /* \"chapter8/Ex8_7.sol\":774:792  MAX_UINT.mod(_num) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n        /* \"chapter8/Ex8_7.sol\":767:792  return MAX_UINT.mod(_num) */\n      swap1\n      pop\n        /* \"chapter8/Ex8_7.sol\":703:800  function modulo(uint _num) public pure returns(uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chapter8/Ex8_7.sol\":806:919  function subtraction(uint _num1, uint _num2) public pure returns(uint) {\r... */\n    tag_20:\n        /* \"chapter8/Ex8_7.sol\":871:875  uint */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":895:911  _num1.add(_num2) */\n      tag_36\n        /* \"chapter8/Ex8_7.sol\":905:910  _num2 */\n      dup3\n        /* \"chapter8/Ex8_7.sol\":895:900  _num1 */\n      dup5\n        /* \"chapter8/Ex8_7.sol\":895:904  _num1.add */\n      tag_31\n      swap1\n        /* \"chapter8/Ex8_7.sol\":895:911  _num1.add(_num2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"chapter8/Ex8_7.sol\":888:911  return _num1.add(_num2) */\n      swap1\n      pop\n        /* \"chapter8/Ex8_7.sol\":806:919  function subtraction(uint _num1, uint _num2) public pure returns(uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"chapter8/Ex8_7.sol\":487:592  function multiplication(uint _num) public pure returns(uint) {\r... */\n    tag_23:\n        /* \"chapter8/Ex8_7.sol\":542:546  uint */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":566:584  MAX_UINT.mul(_num) */\n      tag_38\n        /* \"chapter8/Ex8_7.sol\":579:583  _num */\n      dup3\n        /* \"chapter8/Ex8_7.sol\":306:307  0 */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":300:308  ~uint(0) */\n      not\n        /* \"chapter8/Ex8_7.sol\":566:578  MAX_UINT.mul */\n      tag_39\n      swap1\n        /* \"chapter8/Ex8_7.sol\":566:584  MAX_UINT.mul(_num) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"chapter8/Ex8_7.sol\":559:584  return MAX_UINT.mul(_num) */\n      swap1\n      pop\n        /* \"chapter8/Ex8_7.sol\":487:592  function multiplication(uint _num) public pure returns(uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chapter8/Ex8_7.sol\":268:308  uint constant public MAX_UINT = ~uint(0) */\n    tag_25:\n        /* \"chapter8/Ex8_7.sol\":306:307  0 */\n      0x00\n        /* \"chapter8/Ex8_7.sol\":300:308  ~uint(0) */\n      not\n        /* \"chapter8/Ex8_7.sol\":268:308  uint constant public MAX_UINT = ~uint(0) */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3159:3166  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3189:3190  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3192:3193  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3185:3188  div */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3178:3224  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":951:960  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":967:968  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":963:964  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":963:968  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":951:968  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":991:992  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":986:987  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":986:992  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":1042:1043  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":1035:1043  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4436:4564  function mod(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4494:4501  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4520:4557  mod(a, b, \"SafeMath: modulo by zero\") */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4524:4525  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4527:4528  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4520:4557  mod(a, b, \"SafeMath: modulo by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4520:4523  mod */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4520:4557  mod(a, b, \"SafeMath: modulo by zero\") */\n      jump\t// in\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4513:4557  return mod(a, b, \"SafeMath: modulo by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":4436:4564  function mod(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2180:2639  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2238:2245  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2484:2485  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2479:2480  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2479:2485  a == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2475:2520  if (a == 0) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2508:2509  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2501:2509  return 0 */\n      swap1\n      pop\n      jump(tag_48)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2475:2520  if (a == 0) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2530:2539  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2546:2547  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2542:2543  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2542:2547  a * b */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2530:2547  uint256 c = a * b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2574:2575  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2569:2570  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2565:2566  c */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2565:2570  c / a */\n      dup2\n      tag_50\n      jumpi\n      invalid\n    tag_50:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2565:2575  c / a == b */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2557:2613  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2631:2632  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2624:2632  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":2180:2639  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3799:3806  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3830:3831  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3826:3827  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3826:3831  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3833:3845  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3818:3846  require(b > 0, errorMessage) */\n      swap1\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_54:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_54)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_57:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3856:3865  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3872:3873  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3868:3869  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3868:3873  a / b */\n      dup2\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3856:3873  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3977:3978  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3970:3978  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5035:5198  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5121:5128  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5153:5154  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5148:5149  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5148:5154  b != 0 */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5156:5168  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5140:5169  require(b != 0, errorMessage) */\n      swap1\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_61:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_61)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5190:5191  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5186:5187  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5186:5191  a % b */\n      dup2\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n      mod\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5179:5191  return a % b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":5035:5198  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa2646970667358221220363bcdf6af6c02fefc846a29db6d794b742307fd1e19507040db05e4e2bc90ad64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506105f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806345bd069b14610067578063543209b7146100a9578063886c6f51146100eb578063900683d01461012d578063c6162c6114610179578063e5b5019a146101bb575b600080fd5b6100936004803603602081101561007d57600080fd5b81019080803590602001909291905050506101d9565b6040518082815260200191505060405180910390f35b6100d5600480360360208110156100bf57600080fd5b81019080803590602001909291905050506101f7565b6040518082815260200191505060405180910390f35b6101176004803603602081101561010157600080fd5b8101908080359060200190929190505050610215565b6040518082815260200191505060405180910390f35b6101636004803603604081101561014357600080fd5b810190808035906020019092919080359060200190929190505050610233565b6040518082815260200191505060405180910390f35b6101a56004803603602081101561018f57600080fd5b8101908080359060200190929190505050610250565b6040518082815260200191505060405180910390f35b6101c361026e565b6040518082815260200191505060405180910390f35b60006101f08260001961027490919063ffffffff16565b9050919050565b600061020e826000196102be90919063ffffffff16565b9050919050565b600061022c8260001961034690919063ffffffff16565b9050919050565b600061024882846102be90919063ffffffff16565b905092915050565b60006102678260001961039090919063ffffffff16565b9050919050565b60001981565b60006102b683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610416565b905092915050565b60008082840190508381101561033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061038883836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f00000000000000008152506104dc565b905092915050565b6000808314156103a35760009050610410565b60008284029050828482816103b457fe5b041461040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061059e6021913960400191505060405180910390fd5b809150505b92915050565b600080831182906104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561048757808201518184015260208101905061046c565b50505050905090810190601f1680156104b45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816104ce57fe5b049050809150509392505050565b6000808314158290610589576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561054e578082015181840152602081019050610533565b50505050905090810190601f16801561057b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082848161059357fe5b069050939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220363bcdf6af6c02fefc846a29db6d794b742307fd1e19507040db05e4e2bc90ad64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45BD069B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x543209B7 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x886C6F51 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x900683D0 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xC6162C61 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1F0 DUP3 PUSH1 0x0 NOT PUSH2 0x274 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP3 PUSH1 0x0 NOT PUSH2 0x2BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C DUP3 PUSH1 0x0 NOT PUSH2 0x346 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248 DUP3 DUP5 PUSH2 0x2BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 DUP3 PUSH1 0x0 NOT PUSH2 0x390 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x416 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 DUP2 MSTORE POP PUSH2 0x4DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x3B4 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x59E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x46C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x4CE JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO DUP3 SWAP1 PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x533 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x593 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 CALLDATASIZE EXTCODESIZE 0xCD 0xF6 0xAF PUSH13 0x2FEFC846A29DB6D794B742307 REVERT 0x1E NOT POP PUSH17 0x40DB05E4E2BC90AD64736F6C6343000706 STOP CALLER ",
							"sourceMap": "197:725:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806345bd069b14610067578063543209b7146100a9578063886c6f51146100eb578063900683d01461012d578063c6162c6114610179578063e5b5019a146101bb575b600080fd5b6100936004803603602081101561007d57600080fd5b81019080803590602001909291905050506101d9565b6040518082815260200191505060405180910390f35b6100d5600480360360208110156100bf57600080fd5b81019080803590602001909291905050506101f7565b6040518082815260200191505060405180910390f35b6101176004803603602081101561010157600080fd5b8101908080359060200190929190505050610215565b6040518082815260200191505060405180910390f35b6101636004803603604081101561014357600080fd5b810190808035906020019092919080359060200190929190505050610233565b6040518082815260200191505060405180910390f35b6101a56004803603602081101561018f57600080fd5b8101908080359060200190929190505050610250565b6040518082815260200191505060405180910390f35b6101c361026e565b6040518082815260200191505060405180910390f35b60006101f08260001961027490919063ffffffff16565b9050919050565b600061020e826000196102be90919063ffffffff16565b9050919050565b600061022c8260001961034690919063ffffffff16565b9050919050565b600061024882846102be90919063ffffffff16565b905092915050565b60006102678260001961039090919063ffffffff16565b9050919050565b60001981565b60006102b683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610416565b905092915050565b60008082840190508381101561033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061038883836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f00000000000000008152506104dc565b905092915050565b6000808314156103a35760009050610410565b60008284029050828482816103b457fe5b041461040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061059e6021913960400191505060405180910390fd5b809150505b92915050565b600080831182906104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561048757808201518184015260208101905061046c565b50505050905090810190601f1680156104b45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816104ce57fe5b049050809150509392505050565b6000808314158290610589576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561054e578082015181840152602081019050610533565b50505050905090810190601f16801561057b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082848161059357fe5b069050939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220363bcdf6af6c02fefc846a29db6d794b742307fd1e19507040db05e4e2bc90ad64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45BD069B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x543209B7 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x886C6F51 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x900683D0 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xC6162C61 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1F0 DUP3 PUSH1 0x0 NOT PUSH2 0x274 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP3 PUSH1 0x0 NOT PUSH2 0x2BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C DUP3 PUSH1 0x0 NOT PUSH2 0x346 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248 DUP3 DUP5 PUSH2 0x2BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 DUP3 PUSH1 0x0 NOT PUSH2 0x390 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x416 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 DUP2 MSTORE POP PUSH2 0x4DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x3B4 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x59E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x46C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x4CE JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO DUP3 SWAP1 PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x533 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x593 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 CALLDATASIZE EXTCODESIZE 0xCD 0xF6 0xAF PUSH13 0x2FEFC846A29DB6D794B742307 REVERT 0x1E NOT POP PUSH17 0x40DB05E4E2BC90AD64736F6C6343000706 STOP CALLER ",
							"sourceMap": "197:725:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;382;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;703:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;806:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;487:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;268:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;598:99;647:4;671:18;684:4;306:1;300:8;671:12;;:18;;;;:::i;:::-;664:25;;598:99;;;:::o;382:::-;431:4;455:18;468:4;306:1;300:8;455:12;;:18;;;;:::i;:::-;448:25;;382:99;;;:::o;703:97::-;750:4;774:18;787:4;306:1;300:8;774:12;;:18;;;;:::i;:::-;767:25;;703:97;;;:::o;806:113::-;871:4;895:16;905:5;895;:9;;:16;;;;:::i;:::-;888:23;;806:113;;;;:::o;487:105::-;542:4;566:18;579:4;306:1;300:8;566:12;;:18;;;;:::i;:::-;559:25;;487:105;;;:::o;268:40::-;306:1;300:8;268:40;:::o;3101:130:1:-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;874:176::-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;4436:128::-;4494:7;4520:37;4524:1;4527;4520:37;;;;;;;;;;;;;;;;;:3;:37::i;:::-;4513:44;;4436:128;;;;:::o;2180:459::-;2238:7;2484:1;2479;:6;2475:45;;;2508:1;2501:8;;;;2475:45;2530:9;2546:1;2542;:5;2530:17;;2574:1;2569;2565;:5;;;;;;:10;2557:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2624:8;;;2180:459;;;;;:::o;3713:272::-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o;5035:163::-;5121:7;5153:1;5148;:6;;5156:12;5140:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5190:1;5186;:5;;;;;;5179:12;;5035:163;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "304800",
								"executionCost": "343",
								"totalCost": "305143"
							},
							"external": {
								"MAX_UINT()": "296",
								"addition(uint256)": "infinite",
								"division(uint256)": "infinite",
								"modulo(uint256)": "infinite",
								"multiplication(uint256)": "infinite",
								"subtraction(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 197,
									"end": 922,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 922,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220363bcdf6af6c02fefc846a29db6d794b742307fd1e19507040db05e4e2bc90ad64736f6c63430007060033",
									".code": [
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "45BD069B"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "543209B7"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "886C6F51"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "900683D0"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "C6162C61"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "E5B5019A"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 922,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 598,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 684,
											"end": 688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 306,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 671,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 671,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 671,
											"end": 689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 671,
											"end": 689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 671,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 671,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 382,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 468,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 306,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 455,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 455,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 455,
											"end": 473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 703,
											"end": 800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 787,
											"end": 791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 306,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 774,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 774,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 774,
											"end": 792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 800,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 895,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 895,
											"end": 904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 895,
											"end": 911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 911,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 895,
											"end": 911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 487,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 579,
											"end": 583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 306,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 566,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 566,
											"end": 584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 566,
											"end": 584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 584,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 559,
											"end": 584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 592,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 308,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 963,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 951,
											"end": 968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 951,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4436,
											"end": 4564,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4436,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4524,
											"end": 4525,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4520,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH data",
											"source": 1,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5198,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"addition(uint256)": "543209b7",
							"division(uint256)": "45bd069b",
							"modulo(uint256)": "886c6f51",
							"multiplication(uint256)": "c6162c61",
							"subtraction(uint256,uint256)": "900683d0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"addition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"division\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"modulo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"multiplication\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_num2\",\"type\":\"uint256\"}],\"name\":\"subtraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"chapter8/Ex8_7.sol\":\"Ex8_7\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"chapter8/Ex8_7.sol\":{\"keccak256\":\"0x96e35bde42a80ee2423480b35fdc0e881f4d10ebe10866de19d5ca31f811b088\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6804d2f6e042219cb2042041f4181c6b0aaed774ab3d0fbc463978fc83bdc4f8\",\"dweb:/ipfs/QmTDXhtD6zFkR8HPXc8ejUUy6MS7EtSut297Qur7GEetfw\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202985571277724457ec30ea2d7a46228a96d1df26a8c71cf4a178ff5f7e5a03dd64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202985571277724457ec30ea2d7a46228a96d1df26a8c71cf4a178ff5f7e5a03dd64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 DUP6 JUMPI SLT PUSH24 0x724457EC30EA2D7A46228A96D1DF26A8C71CF4A178FF5F7E GAS SUB 0xDD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "622:4578:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202985571277724457ec30ea2d7a46228a96d1df26a8c71cf4a178ff5f7e5a03dd64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 DUP6 JUMPI SLT PUSH24 0x724457EC30EA2D7A46228A96D1DF26A8C71CF4A178FF5F7E GAS SUB 0xDD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "622:4578:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202985571277724457ec30ea2d7a46228a96d1df26a8c71cf4a178ff5f7e5a03dd64736f6c63430007060033",
									".code": [
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"chapter8/Ex8_7.sol": {
				"ast": {
					"absolutePath": "chapter8/Ex8_7.sol",
					"exportedSymbols": {
						"Ex8_7": [
							80
						],
						"SafeMath": [
							276
						]
					},
					"id": 81,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 81,
							"sourceUnit": 277,
							"src": "72:121:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "Ex8_7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 276,
										"src": "225:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$276",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "219:24:0",
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "238:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "e5b5019a",
									"id": 12,
									"mutability": "constant",
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "268:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "268:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "300:8:0",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "306:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 8,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "301:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:0",
													"typeDescriptions": {}
												}
											},
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "301:7:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "437:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 21,
															"name": "_num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "468:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 19,
															"name": "MAX_UINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "455:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "455:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "455:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 18,
												"id": 23,
												"nodeType": "Return",
												"src": "448:25:0"
											}
										]
									},
									"functionSelector": "543209b7",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addition",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_num",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "400:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:11:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "431:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:6:0"
									},
									"scope": 80,
									"src": "382:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "548:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 34,
															"name": "_num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 32,
															"name": "MAX_UINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "566:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "566:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "566:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 31,
												"id": 36,
												"nodeType": "Return",
												"src": "559:25:0"
											}
										]
									},
									"functionSelector": "c6162c61",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multiplication",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_num",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "511:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:11:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "542:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:6:0"
									},
									"scope": 80,
									"src": "487:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "653:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 47,
															"name": "_num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 45,
															"name": "MAX_UINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "671:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 206,
														"src": "671:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 44,
												"id": 49,
												"nodeType": "Return",
												"src": "664:25:0"
											}
										]
									},
									"functionSelector": "45bd069b",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "division",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "_num",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "616:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:11:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "647:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:6:0"
									},
									"scope": 80,
									"src": "598:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "756:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 60,
															"name": "_num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "787:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 58,
															"name": "MAX_UINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "774:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 251,
														"src": "774:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "774:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 62,
												"nodeType": "Return",
												"src": "767:25:0"
											}
										]
									},
									"functionSelector": "886c6f51",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modulo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_num",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "719:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:11:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "750:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:6:0"
									},
									"scope": 80,
									"src": "703:97:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "877:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 75,
															"name": "_num2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 73,
															"name": "_num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "895:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 72,
												"id": 77,
												"nodeType": "Return",
												"src": "888:23:0"
											}
										]
									},
									"functionSelector": "900683d0",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subtraction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_num1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "827:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "827:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_num2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "839:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:24:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "871:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "871:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:6:0"
									},
									"scope": 80,
									"src": "806:113:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 81,
							"src": "197:725:0"
						}
					],
					"src": "37:889:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							276
						]
					},
					"id": 277,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 82,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 83,
								"nodeType": "StructuredDocumentation",
								"src": "58:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 276,
							"linearizedBaseContracts": [
								276
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "941:109:1",
										"statements": [
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 108,
														"src": "951:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "951:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 98,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "963:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 96,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "967:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "951:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 100,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "986:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 101,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "991:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "986:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "994:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "978:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "978:46:1"
											},
											{
												"expression": {
													"id": 106,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "1042:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 107,
												"nodeType": "Return",
												"src": "1035:8:1"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "645:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "887:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "898:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:22:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "932:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:9:1"
									},
									"scope": 276,
									"src": "874:176:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1388:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 120,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1409:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 121,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1412:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 119,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															126,
															154
														],
														"referencedDeclaration": 154,
														"src": "1405:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 118,
												"id": 124,
												"nodeType": "Return",
												"src": "1398:50:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1056:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1334:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1345:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:22:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1379:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:9:1"
									},
									"scope": 276,
									"src": "1321:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1841:92:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 139,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "1859:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 140,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "1864:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1859:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 142,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1867:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1851:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1851:29:1"
											},
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "1890:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 145,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1890:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 147,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1902:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 148,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1890:17:1"
											},
											{
												"expression": {
													"id": 151,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 146,
													"src": "1925:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 137,
												"id": 152,
												"nodeType": "Return",
												"src": "1918:8:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1461:280:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1759:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1770:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1781:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1781:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:50:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1832:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:9:1"
									},
									"scope": 276,
									"src": "1746:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2247:392:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2479:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2484:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2479:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 170,
												"nodeType": "IfStatement",
												"src": "2475:45:1",
												"trueBody": {
													"id": 169,
													"nodeType": "Block",
													"src": "2487:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2508:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 163,
															"id": 168,
															"nodeType": "Return",
															"src": "2501:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "2530:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 173,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2542:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 174,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2546:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 178,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2565:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 179,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "2569:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2565:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2574:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2557:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2557:56:1"
											},
											{
												"expression": {
													"id": 186,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 172,
													"src": "2631:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 163,
												"id": 187,
												"nodeType": "Return",
												"src": "2624:8:1"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1939:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2193:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2204:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:22:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2238:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:9:1"
									},
									"scope": 276,
									"src": "2180:459:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "3168:63:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3189:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 201,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "3192:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 199,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															206,
															234
														],
														"referencedDeclaration": 234,
														"src": "3185:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 204,
												"nodeType": "Return",
												"src": "3178:46:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2645:451:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3114:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:22:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3159:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3158:9:1"
									},
									"scope": 276,
									"src": "3101:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3808:177:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "3826:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3826:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 222,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "3833:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3818:28:1"
											},
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "3856:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3856:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3868:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3872:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3868:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3856:17:1"
											},
											{
												"expression": {
													"id": 231,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 226,
													"src": "3977:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 232,
												"nodeType": "Return",
												"src": "3970:8:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3237:471:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3726:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3737:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3748:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 212,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3748:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:50:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3799:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3798:9:1"
									},
									"scope": 276,
									"src": "3713:272:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "4503:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4524:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 246,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4527:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4530:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 244,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															275
														],
														"referencedDeclaration": 275,
														"src": "4520:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "4513:44:1"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3991:440:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4449:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4460:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4448:22:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4494:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4493:9:1"
									},
									"scope": 276,
									"src": "4436:128:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "5130:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "5148:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5153:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5148:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "5156:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5140:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "5140:29:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "5186:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "5190:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5186:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 273,
												"nodeType": "Return",
												"src": "5179:12:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "4570:460:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5048:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5059:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5070:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5070:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5047:50:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5121:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5120:9:1"
									},
									"scope": 276,
									"src": "5035:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 277,
							"src": "622:4578:1"
						}
					],
					"src": "33:5168:1"
				},
				"id": 1
			}
		}
	}
}